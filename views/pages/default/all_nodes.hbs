<!--Main layout--><!--Accordion wrapper-->
<main class="pt-5 mx-lg-5 accordion md-accordion" id="accordionCont" role="tablist" aria-multiselectable="true">
    <div class="container-fluid mt-5">

        <!-- Heading -->
        <div class="card mb-4 wow fadeIn">
            <div class="card-body d-sm-flex justify-content-between">
                <h4 class="mb-2 mb-sm-0 pt-1">
                <span>All Nodes</span>
                </h4>
            </div>
        </div>
        <!-- Heading -->

        <div class="wow fadeIn history">
            <ul class="nav nav-tabs md-tabs" id="myTabMD" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="home-tab-md" data-toggle="tab" href="#home-md" role="tab" aria-controls="home-md"
                    aria-selected="true">Blocks History</a>
                </li>
            </ul>
            <div class="tab-content card pt-5" id="myTabContentMD">
                <div class="tab-pane fade show active" id="home-md" role="tabpanel" aria-labelledby="home-tab-md">
                    <div id="blockContainer" class="d-flex justify-content-start flex-wrap">
                        {{> blockinfo }}
                    </div>
                </div>
            </div>
        </div>

    </div>
</main>
<!--Main layout-->

{{> footer }}

{{!-- page level js below --}}
<script>
    var myblocks = {};
    var blockTmp = $('.block')[0].outerHTML;
    const $cont = $('#blockContainer');
    $cont.html("");

    const formatTimestamp = (t) => {
        let d = new Date(t);
        let format = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;
        return format;
    }

    const drawBlocks = () => {
        //get blocks, ipfsData, ipfsHash     
        const { blocks, ipfsData, ipfsHash } = myblocks;        
        blocks.forEach((block)=>{
            let $newBlock = $(blockTmp);
            let $infoCont = $newBlock.find('.info-content');
            let itemStr = $infoCont.find('.block-item')[0].outerHTML;
            $infoCont.html('');
            for(prop in block){
                let $item = $(itemStr);
                $item.find('.label').html(prop);
                (prop != 'timestamp')? ((prop == 'orgPublickey' || prop == 'previousHash' || prop == 'hash') ? 
                    $item.find('.value').html(block[prop].substr(0,30) + '...') : $item.find('.value').html(block[prop])) : $item.find('.value').html(formatTimestamp(block[prop]));
                $infoCont.append($item);
            }
            $cont.append($newBlock);
        });
    }

    const getMyBlocks = () => {
        
        const { org } = $('#auth_user').data(); 

        fetch('http://localhost:8900/api/get_my_nodes', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orgPublickey: org })
        }).then(response => response.json())
        .then((res)=>{
            if(res.status == "success"){
                //updateStatus
                myblocks = res.data;
                if(!myblocks) return alert('No block data found');
                console.log(myblocks);
                //drawBlocks();
                return;
            }
            return alert(res.message);
        });
    }

    getMyBlocks();

</script>
